type Query {
  currentUser: User!
  tasks(approved: Boolean): [Task]
}

type Mutation {
  register(email: String!, password: String!, isAdmin: Boolean!): User
  login(email: String!, password: String!): LoginResponse
  uploadTasksFile(tasks: String!): [Task]
  uploadSingleTask(number: Int!, command: String!, frequency: Int!, period: String!): Task
  approveTask(id: ID!): Task
}

type User {
  id: ID!
  email: String!
  isAdmin: Boolean!
  tasks: [Task]
}

type LoginResponse {
  token: String
  user: User
}

type Task {
  id: ID!
  approved: Boolean!
  number: Int!
  command: String!
  frequency: Int!
  period: String!
  author: User
  executions: [Execution!]
}

type Execution {
  id: ID!,
  datetime: Int!,
  task: Task
}

type Subscription {
  newExecution: Execution
  newTask: Task
}